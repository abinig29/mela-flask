"""Fixed

Revision ID: 352411582f11
Revises: 
Create Date: 2024-11-04 14:44:30.962438

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '352411582f11'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('skills',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('skill_name', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('password', sa.String(length=128), nullable=True),
    sa.Column('first_time_login', sa.Boolean(), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'USER', name='roletype'), nullable=True),
    sa.Column('verification_code_hash', sa.String(length=128), nullable=True),
    sa.Column('verification_code_expires', sa.BIGINT(), nullable=True),
    sa.Column('account_status', sa.Enum('REGISTERED', 'VERIFIED', 'SUSPENDED', name='accountstatus'), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('auth_provider', sa.Enum('CREDENTIAL', 'GOOGLE', 'FACEBOOK', name='authprovider'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('companies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('website', sa.String(length=100), nullable=True),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profiles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('phone_number', sa.String(length=15), nullable=True),
    sa.Column('address_line_1', sa.String(length=100), nullable=True),
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('website', sa.String(length=100), nullable=True),
    sa.Column('linkedin_profile', sa.String(length=100), nullable=True),
    sa.Column('github_profile', sa.String(length=100), nullable=True),
    sa.Column('cv_link', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('educations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('profile_id', sa.UUID(), nullable=False),
    sa.Column('institution', sa.String(length=100), nullable=False),
    sa.Column('degree', sa.String(length=100), nullable=False),
    sa.Column('field_of_study', sa.String(length=100), nullable=True),
    sa.Column('from_year', sa.Integer(), nullable=False),
    sa.Column('to_year', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('experiences',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('profile_id', sa.UUID(), nullable=False),
    sa.Column('company', sa.String(length=100), nullable=False),
    sa.Column('role', sa.String(length=100), nullable=False),
    sa.Column('from_date', sa.Date(), nullable=False),
    sa.Column('to_date', sa.Date(), nullable=True),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jobs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('company_name', sa.String(length=255), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('posted_date', sa.DateTime(), nullable=True),
    sa.Column('application_link', sa.String(length=255), nullable=True),
    sa.Column('company_id', sa.UUID(), nullable=True),
    sa.Column('source', sa.String(length=255), nullable=True),
    sa.Column('experience_level', sa.Enum('ENTRY_LEVEL', 'MID_LEVEL', 'SENIOR_LEVEL', 'DIRECTOR', 'EXECUTIVE', name='experiencelevel'), nullable=False),
    sa.Column('job_type', sa.Enum('FULL_TIME', 'PART_TIME', 'CONTRACT', 'INTERNSHIP', 'TEMPORARY', name='jobtype'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_preferences',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('profile_id', sa.UUID(), nullable=False),
    sa.Column('preferred_location', sa.String(), nullable=True),
    sa.Column('full_time', sa.Boolean(), nullable=True),
    sa.Column('part_time', sa.Boolean(), nullable=True),
    sa.Column('remote', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('job_categories',
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.Column('category_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.PrimaryKeyConstraint('job_id', 'category_id')
    )
    op.create_table('tags',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('job_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user_category_association',
    sa.Column('user_preferences_id', sa.UUID(), nullable=False),
    sa.Column('category_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['user_preferences_id'], ['user_preferences.id'], ),
    sa.PrimaryKeyConstraint('user_preferences_id', 'category_id')
    )
    op.create_table('user_skill_association',
    sa.Column('user_preferences_id', sa.UUID(), nullable=False),
    sa.Column('skill_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['skill_id'], ['skills.id'], ),
    sa.ForeignKeyConstraint(['user_preferences_id'], ['user_preferences.id'], ),
    sa.PrimaryKeyConstraint('user_preferences_id', 'skill_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_skill_association')
    op.drop_table('user_category_association')
    op.drop_table('tags')
    op.drop_table('job_categories')
    op.drop_table('user_preferences')
    op.drop_table('jobs')
    op.drop_table('experiences')
    op.drop_table('educations')
    op.drop_table('profiles')
    op.drop_table('companies')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('skills')
    op.drop_table('categories')
    # ### end Alembic commands ###
